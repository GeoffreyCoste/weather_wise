'use server'

import { CityData } from "@/@types/api-datas"
import { GeoNamesCityData } from "@/@types/geonames"
import { OpenMeteoData } from "@/@types/openmeteo"

export type IndexObject = {
    [key: string]: string;
}

const indexContinentsEn: IndexObject = {
    AF: "0", 
    AN: "1", 
    AS: "2", 
    EU: "3",  
    NA: "4",
    OC: "5",
    SA: "6"
}

const indexContinentsFr: IndexObject = {
    AF: "0", 
    NA: "1",
    SA: "2",
    AN: "3", 
    AS: "4", 
    EU: "5",  
    OC: "6"
}

const indexCountriesEn: IndexObject = {
    AF: "0",
    AX: "1",
    AL: "2",
    DZ: "3",
    AS: "4",
    AD: "5",
    AO: "6",
    AI: "7",
    AQ: "8",
    AG: "9",
    AR: "9",
    AM: "10",
    AW: "11",
    AU: "12",
    AT: "14",
    AZ: "15",
    BS: "16",
    BH: "17",
    BD: "18",
    BB: "19",
    BY: "20",
    BE: "21",
    BZ: "22",
    BJ: "23",
    BM: "24",
    BT: "25",
    BO: "26",
    BQ: "27",
    BA: "28",
    BW: "29",
    BV: "30",
    BR: "31",
    IO: "32",
    VG: "33",
    BN: "34",
    BG: "35",
    BF: "36",
    BI: "37",
    KH: "38",
    CM: "39",
    CA: "40",
    CV: "41",
    KY: "42",
    CF: "43",
    TD: "44",
    CL: "45",
    CN: "46",
    CX: "47",
    CC: "48",
    CO: "49",
    KM: "50",
    CR: "51",
    HR: "52",
    CU: "53",
    CW: "54",
    CY: "55",
    CZ: "56",
    CD: "57",
    DK: "58",
    DJ: "59",
    DM: "60",
    DO: "61",
    TL: "62",
    EC: "63",
    EG: "64",
    SV: "65",
    GQ: "66",
    ER: "67",
    EE: "68",
    ET: "69",
    FK: "70",
    FO: "71",
    FJ: "72",
    FI: "73",
    FR: "74",
    GF: "75",
    PF: "76",
    TF: "77",
    GA: "78",
    GM: "79",
    GE: "80",
    DE: "81",
    GH: "82",
    GI: "83",
    GR: "84",
    GL: "85",
    GD: "86",
    GP: "87",
    GU: "88",
    GT: "89",
    GG: "90",
    GN: "91",
    GW: "92",
    GY: "93",
    HT: "94",
    HM: "95",
    HN: "96",
    HK: "97",
    HU: "98",
    IS: "99",
    IN: "100",
    ID: "101",
    IR: "102",
    IQ: "103",
    IE: "104",
    IM: "105",
    IL: "106",
    IT: "107",
    CI: "108",
    JM: "109",
    JP: "110",
    JE: "111",
    JO: "112",
    KZ: "113",
    KE: "114",
    KI: "115",
    KW: "116",
    KG: "117",
    LA: "118",
    LV: "119",
    LB: "120",
    LS: "121",
    LR: "122",
    LY: "123",
    LI: "124",
    LT: "125",
    LU: "126",
    MO: "127",
    MK: "128",
    MG: "129",
    MW: "130",
    MY: "131",
    MV: "132",
    ML: "133",
    MT: "134",
    MH: "135",
    MQ: "136",
    MR: "137",
    MU: "138",
    YT: "139",
    MX: "140",
    FM: "141",
    MD: "142",
    MC: "143",
    MN: "144",
    ME: "145",
    MS: "146",
    MA: "147",
    MZ: "148",
    MM: "149",
    NA: "150",
    NR: "151",
    NP: "152",
    NL: "153",
    NC: "154",
    NZ: "155",
    NI: "156",
    NE: "157",
    NG: "158",
    NU: "159",
    NF: "160",
    MP: "161",
    KP: "162",
    NO: "163",
    OM: "164",
    PK: "165",
    PW: "166",
    PS: "167",
    PA: "168",
    PG: "169",
    PY: "170",
    PE: "171",
    PH: "172",
    PN: "173",
    PL: "174",
    PT: "175",
    PR: "176",
    QA: "177",
    CG: "178",
    RE: "179",
    RO: "180",
    RU: "181",
    RW: "182",
    BL: "183",
    SH: "184",
    KN: "185",
    LC: "186",
    MF: "187",
    PM: "188",
    VC: "189",
    WS: "190",
    SM: "191",
    ST: "192",
    SA: "193",
    SN: "194",
    RS: "195",
    SC: "196",
    SL: "197",
    SG: "198",
    SX: "199",
    SK: "200",
    SI: "201",
    SB: "202",
    SO: "203",
    ZA: "204",
    GS: "205",
    KR: "206",
    SS: "207",
    ES: "208",
    LK: "209",
    SD: "210",
    SR: "211",
    SJ: "212",
    SZ: "213",
    SE: "214",
    CH: "215",
    SY: "216",
    TW: "217",
    TJ: "218",
    TZ: "219",
    TH: "220",
    TG: "221",
    TK: "222",
    TO: "223",
    TT: "224",
    TN: "225",
    TR: "226",
    TM: "227",
    TC: "228",
    TV: "229",
    UG: "230",
    UA: "231",
    AE: "232",
    GB: "233",
    US: "234",
    UM: "235",
    UY: "236",
    VI: "237",
    UZ: "238",
    VU: "239",
    VA: "240",
    VE: "241",
    VN: "242",
    WF: "243",
    EH: "244",
    YE: "245",
    ZM: "246",
    ZW: "247"
}

const indexCountriesFr: IndexObject = {
    AF: "0",
    ZA: "1",
    AL: "2",
    DZ: "3",
    DE: "4",
    AD: "5",
    AO: "6",
    AI: "7",
    AQ: "8",
    AG: "9",
    SA: "10",
    AR: "11",
    AM: "12",
    AW: "13",
    AU: "14",
    AT: "15",
    AZ: "16",
    BS: "17",
    BH: "18",
    BD: "19",
    BB: "20",
    BE: "21",
    BZ: "22",
    BJ: "23",
    BM: "24",
    BT: "25",
    BY: "26",
    MM: "27",
    BO: "28",
    BQ: "29",
    BA: "30",
    BW: "31",
    BR: "32",
    BN: "33",
    BG: "34",
    BF: "35",
    BI: "36",
    KH: "37",
    CM: "38",
    CA: "39",
    CV: "40",
    CL: "41",
    CN: "42",
    CY: "43",
    CO: "44",
    KM: "45",
    KP: "46",
    KR: "47",
    CR: "48",
    CI: "49",
    HR: "50",
    CU: "51",
    CW: "52",
    DK: "53",
    DJ: "54",
    DM: "55",
    EG: "56",
    AE: "57",
    EC: "58",
    ER: "59",
    ES: "60",
    EE: "61",
    US: "62",
    ET: "63",
    FJ: "64",
    FI: "65",
    FR: "66",
    GA: "67",
    GM: "68",
    GE: "69",
    GS: "70",
    GH: "71",
    GI: "72",
    GR: "73",
    GL: "74",
    GD: "75",
    GP: "76",
    GU: "77",
    GT: "78",
    GG: "79",
    GN: "80",
    GW: "81",
    GQ: "82",
    GY: "83",
    GF: "84",
    HT: "85",
    HN: "86",
    HK: "87",
    HU: "88",
    AX: "89",
    BV: "90",
    KY: "91",
    CX: "92",
    CC: "93",
    FK: "94",
    FO: "95",
    HM: "96",
    IM: "97",
    MH: "98",
    UM: "99",
    NF: "100",
    MP: "101",
    PN: "102",
    SB: "103",
    TC: "104",
    VG: "105",
    VI: "106",
    IN: "107",
    ID: "108",
    IR: "109",
    IQ: "110",
    IE: "111",
    IS: "112",
    IL: "113",
    IT: "114",
    JM: "115",
    JP: "116",
    JE: "117",
    JO: "118",
    KZ: "119",
    KE: "120",
    KI: "121",
    KW: "122",
    KG: "123",
    LA: "124",
    LS: "125",
    LV: "126",
    LB: "127",
    LR: "128",
    LY: "129",
    LI: "130",
    LT: "131",
    LU: "132",
    MO: "133",
    MK: "134",
    MG: "135",
    MY: "136",
    MW: "137",
    MV: "138",
    ML: "139",
    MT: "140",
    MA: "141",
    MQ: "142",
    MR: "143",
    MU: "144",
    YT: "145",
    MX: "146",
    FM: "147",
    MD: "148",
    MC: "149",
    MN: "150",
    ME: "151",
    MS: "152",
    MZ: "153",
    NA: "154",
    NR: "155",
    NP: "156",
    NC: "157",
    NZ: "158",
    NI: "159",
    NE: "160",
    NG: "161",
    NU: "162",
    NO: "163",
    OM: "164",
    UG: "165",
    UZ: "166",
    PK: "167",
    PW: "168",
    PS: "169",
    PA: "170",
    PG: "171",
    PY: "172",
    NL: "173",
    PE: "174",
    PH: "175",
    PL: "176",
    PF: "177",
    PT: "178",
    PR: "179",
    QA: "180",
    CF: "181",
    CD: "182",
    DO: "183",
    CG: "184",
    CZ: "185",
    RE: "186",
    RO: "187",
    GB: "188",
    RU: "189",
    RW: "190",
    EH: "191",
    BL: "192",
    KN: "193",
    SH: "194",
    LC: "195",
    SM: "196",
    MF: "197",
    SX: "198",
    PM: "199",
    VC: "200",
    SV: "201",
    WS: "202",
    AS: "203",
    ST: "204",
    SN: "205",
    RS: "206",
    SC: "207",
    SL: "208",
    SG: "209",
    SK: "210",
    SI: "211",
    SO: "212",
    SD: "213",
    SS: "214",
    LK: "215",
    SE: "216",
    CH: "217",
    SR: "218",
    SJ: "219",
    SZ: "220",
    SY: "221",
    TJ: "222",
    TW: "223",
    TZ: "224",
    TD: "225",
    TF: "226",
    IO: "227",
    TH: "228",
    TL: "229",
    TG: "230",
    TK: "231",
    TO: "232",
    TT: "233",
    TN: "234",
    TM: "235",
    TR: "236",
    TV: "237",
    UA: "238",
    UY: "239",
    VU: "240",
    VA: "241",
    VE: "242",
    VN: "243",
    WF: "244",
    YE: "245",
    ZM: "246",
    ZW: "247"
}

export const getCityById = async (id: string | undefined): Promise<CityData> => {
    try {
        const response = await fetch(`http://localhost:3000/api/city/${id}`);
  
        const json: GeoNamesCityData = await response.json();

        const alternateNames = json.alternateNames;
        const alternateNamesEn = alternateNames.filter(item => item.lang === 'en');

        let cityNameEn;

        if (alternateNamesEn.length === 0) {
          cityNameEn = json.name;
        } else if (alternateNamesEn.length === 1) {
          cityNameEn = alternateNamesEn[0].name;
        } else {
          const preferredName = alternateNamesEn.filter(item => item.hasOwnProperty('isPreferredName'));
          
          if (preferredName.length) {
            cityNameEn = preferredName[0].name;
          } else {
            cityNameEn = alternateNamesEn[0].name;
          }
        }

        const city: CityData = {
            geonameId: json.geonameId.toString(),
            nameFr: json.name,
            nameEn: cityNameEn,
            countryId: json.countryId,
            countryCode: json.countryCode,
            countryIndexFr: indexCountriesFr[`${json.countryCode}`],
            countryIndexEn: indexCountriesEn[`${json.countryCode}`],
            continentCode: json.continentCode,
            continentIndexFr: indexContinentsFr[`${json.continentCode}`],
            continentIndexEn: indexContinentsEn[`${json.continentCode}`],
            timezone: json.timezone.timeZoneId,
            latitude: json.lat,
            longitude: json.lng,
        };
  
        return city;
    } catch (error) {
        throw(error);
    }
};

export const addCityFavourite = async (userId: string, city: CityData) => {

  try {
    const response = await fetch(`http://localhost:3000/api/user/${userId}/add-favourite`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
          geonameId: city.geonameId,
          nameFr: city.nameFr,
          nameEn: city.nameEn,
          countryId: city.countryId,
          countryCode: city.countryCode,
          countryIndexFr: city.countryIndexFr,
          countryIndexEn: city.countryIndexEn,
          continentCode: city.continentCode,
          continentIndexFr: city.continentIndexFr,
          continentIndexEn: city.continentIndexEn,
          timezone: city.timezone,
          latitude: city.latitude,
          longitude: city.longitude,
      })
    });

    const json = await response.json();

    console.log(json);
  } catch(error) {
    console.log(error);
  }
}

export const deleteCityFavourite = async (userId: string, geonameId: string) => {
  try {
    const response = await fetch(`http://localhost:3000/api/user/${userId}/delete-favourite/${geonameId}`, {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json'
      }
    });

    const json = await response.json();
    console.log(json);
  } catch(error) {
    console.log(error);
  }
}

export const getWeather = async (lat: string, lon: string, tz: string): Promise<OpenMeteoData> => {
    try {
        const response = await fetch(`http://localhost:3000/api/weather?lat=${lat}&lon=${lon}&tz=${tz}`);
  
        const weather = await response.json();
  
        return weather;
  
    } catch (error) {
        throw(error);
    }
};

export const getAirQuality = async (lat: string, lon: string, tz: string) => {
  try {
      const response = await fetch(`http://localhost:3000/api/air-quality?lat=${lat}&lon=${lon}&tz=${tz}`);

      const airQuality = await response.json();

      return airQuality;

  } catch (error) {
      console.log(error);
  }
};